definitions:
  models.AddReview:
    properties:
      description:
        type: string
      gameID:
        type: integer
      playMinutes:
        type: integer
      playTime:
        type: integer
      rate:
        type: integer
    type: object
  models.Game:
    properties:
      genres:
        items:
          type: string
        type: array
      imageURI:
        type: string
      name:
        type: string
    type: object
  models.GetReview:
    properties:
      description:
        type: string
      game:
        $ref: '#/definitions/models.Game'
      gameID:
        type: integer
      id:
        type: integer
      playMinutes:
        type: integer
      playTime:
        type: integer
      rate:
        type: integer
    type: object
  models.UpdateReview:
    properties:
      description:
        type: string
      playMinutes:
        type: integer
      playTime:
        type: integer
      rate:
        type: integer
    type: object
info:
  contact: {}
paths:
  /games:
    get:
      consumes:
      - application/json
      description: return a list of game, searched by name
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: get list of games by name
      tags:
      - games
  /games/{id}:
    get:
      consumes:
      - application/json
      description: getting a game by game id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      summary: get game by id
      tags:
      - games
  /reviews:
    post:
      consumes:
      - application/json
      description: add game review
      parameters:
      - description: review info
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.AddReview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetReview'
      summary: add game review
      tags:
      - reviews
  /reviews/{id}:
    delete:
      consumes:
      - application/json
      description: delete game review by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: delete game review by id
      tags:
      - reviews
    get:
      consumes:
      - application/json
      description: get game review by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetReview'
      summary: get game review by id
      tags:
      - reviews
    put:
      consumes:
      - application/json
      description: update game review
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: review info
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.UpdateReview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetReview'
      summary: update game review
      tags:
      - reviews
swagger: "2.0"
